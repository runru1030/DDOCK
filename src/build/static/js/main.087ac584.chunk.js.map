{"version":3,"sources":["fbase.js","routes/AddStore.js","routes/EditStore.js","components/MapContainer.js","routes/GuesetStore.js","components/StoreBox.js","routes/HostHome.js","routes/HostStore.js","routes/Main.js","components/WaitingBox.js","routes/Waiting.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","AddStore","hostObj","useState","storeName","storeSubName","storeAddress","storeCall","openTime","closeTime","storeInfo","menuURL","remain","wait","hostEmail","storeObj","setStoreObj","isOpen","setIsOpen","error","setError","address","setAddress","attachment","setAttachment","history","useHistory","onPostClick","prev","onChange","event","a","target","name","value","onSubmit","preventDefault","Error","attachmentURL","attachmentRef","ref","child","hostId","uuidv4","putString","response","getDownloadURL","collection","add","push","message","className","id","type","placeholder","required","onClick","onComplete","data","fullAddress","extraAddress","addressType","bname","buildingName","for","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","display","src","width","EditStore","JSON","parse","window","localStorage","getItem","newStoreObj","setNewStoreObj","doc","update","setItem","stringify","onDelAttachment","console","log","refFromURL","delete","MapContainer","kakao","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","services","Geocoder","addressSearch","status","Status","OK","coords","y","x","Marker","position","setCenter","height","GuestStore","isReserve","setIsReserve","people","phoneNum","createAtTime","customer","setCustomer","onSnapshot","snapshot","date","Date","get","then","exists","set","waiting","getHours","getMinutes","maxLength","href","StoreBox","isHost","pathname","state","icon","faChevronRight","HostHome","stores","setStores","removeItem","where","Snapshot","storeArr","docs","signOut","store","faPlus","HostStore","isEdit","setIsEdit","confirm","Main","setIsHost","isJoin","setIsJoin","email","password","joinObj","setJoinObj","search","setSerch","errorMess","setErrorMess","onSelectClick","createUserWithEmailAndPassword","signInWithEmailAndPassword","filter","indexOf","faExchangeAlt","length","faSearch","faQuestionCircle","WaitingBox","waitingObj","axios","res","slice","Waiting","waitingArr","setWaitingArr","AppRouter","ishost","exact","path","App","init","setInit","setHostObj","onAuthStateChanged","user","uid","content","getFullYear","ReactDOM","render","StrictMode"],"mappings":"yNAaAA,IAASC,cARa,CAClBC,OAAQC,0CACRC,WAAYD,8BACZE,UAAYF,cACZG,cAAgBH,0BAChBI,kBAAoBJ,eACpBK,MAAQL,iBAGmBH,IAAxB,IACMS,EAAYT,IAASU,OACrBC,EAAYX,IAASY,YACrBC,EAAiBb,IAASc,U,sEC+GxBC,EAzHE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,EAAgCC,mBAAS,CACrCC,UAAW,GACXC,aAAc,GACdC,aAAc,GACdC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXC,QAAS,GACTC,OAAQ,EACRC,KAAM,EACNC,UAAWZ,EAAQY,YAXvB,mBAAOC,EAAP,KAAiBC,EAAjB,KAaA,EAA4Bb,oBAAS,GAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAA8BjB,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAAoCnB,qBAApC,mBAAOoB,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,cA4BVC,EAAc,WAChBT,GAAU,SAAAU,GAAI,OAAKA,MAEjBC,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,wDACuBD,EAA5BE,OAAUC,EADL,EACKA,KAAMC,EADX,EACWA,MACxBlB,GAAY,SAAAD,GAAQ,kCAAUA,GAAV,kBAAqBkB,EAAOC,OAFnC,2CAAH,sDAIRC,EAAQ,uCAAG,WAAOL,GAAP,mBAAAC,EAAA,yDACbD,EAAMM,iBADO,SAGM,IAAXf,GAAe,IAAIgB,MAAM,4DACzBC,EAAgB,GACD,KAAff,EALK,wBAMCgB,EAAgBxC,EAAeyC,MAAMC,MAArB,UAA8BvC,EAAQwC,OAAtC,YAAgDC,gBANjE,SAOkBJ,EAAcK,UAAUrB,EAAY,YAPtD,cAOCsB,EAPD,iBAQiBA,EAASL,IAAIM,iBAR9B,QAQLR,EARK,gCAUHzC,EAAUkD,WAAW,UAAUC,IAA/B,2BAAwCjC,GAAxC,IAAkDJ,QAAS2B,KAVxD,QAYTb,EAAQwB,KAAK,KAZJ,kDAeT7B,EAAS,KAAM8B,SAfN,0DAAH,sDAqBd,OACA,sBAAKC,UAAU,YAAf,UACI,sBAAMA,UAAU,QAAhB,qDACA,qBAAKA,UAAU,6BAAf,SACI,uBAAMhB,SAAUA,EAAUgB,UAAU,kBAApC,UACI,uDAAU,sBAAMC,GAAG,eAAT,kBACV,uBAAOC,KAAK,OAAOC,YAAY,qBAAMrB,KAAK,YAAYJ,SAAUA,EAAU0B,UAAQ,EAACrB,MAAOnB,EAASX,YAEnG,uDAAU,sBAAMgD,GAAG,eAAT,kBACV,uBAAOC,KAAK,OAAOC,YAAY,qBAAMrB,KAAK,eAAeJ,SAAUA,EAAU0B,UAAQ,EAACrB,MAAOnB,EAASV,eAEtG,8DAAY,sBAAM+C,GAAG,eAAT,kBACVnC,EAEI,qCAAE,sBAAMuC,QAAS7B,EAAayB,GAAG,aAA/B,0BAAqD,cAAC,IAAD,CACrDK,WA3DG,SAACC,GACpB,IAAIC,EAAcD,EAAKrC,QACnBuC,EAAe,GACM,MAArBF,EAAKG,cACc,KAAfH,EAAKI,QACLF,GAAgBF,EAAKI,OAEC,KAAtBJ,EAAKK,eACLH,GAAkC,KAAjBA,EAAA,YAA2BF,EAAKK,cAAiBL,EAAKK,cAE3EJ,GAAiC,KAAjBC,EAAA,YAA2BA,EAA3B,KAA6C,IAEjEtC,EAAWqC,GACXzC,GAAU,GACVF,GAAY,SAAAD,GAAQ,kCAAUA,GAAV,IAAoBT,aAAcqD,QA6CVR,UAAU,gBAF1C,sBAAMK,QAAS7B,EAAayB,GAAG,aAA/B,uCAIJ,sBAAMA,GAAG,UAAT,SAAoB/B,IAEpB,6DACA,sBAAK8B,UAAU,uBAAf,UACI,uBAAOE,KAAK,MAAMC,YAAY,eAAKrB,KAAK,WAAWJ,SAAUA,EAAUK,MAAOnB,EAASP,WACvF,uCACA,uBAAO6C,KAAK,MAAMC,YAAY,eAAKrB,KAAK,YAAYJ,SAAUA,EAAUK,MAAOnB,EAASN,eAG5F,mEACA,uBAAO4C,KAAK,MAAMpB,KAAK,YAAYJ,SAAUA,EAAU0B,UAAQ,EAACrB,MAAOnB,EAASR,YAEhF,6DACA,cAAC,IAAD,CAAkB+C,YAAY,kCAASrB,KAAK,YAAYJ,SAAUA,EAAUK,MAAOnB,EAASL,UAAW0C,GAAG,aAE1G,8DACE7B,GAAc,uBAAOyC,IAAI,cAAcZ,GAAG,aAA5B,uCAChB,uBAAOA,GAAG,cAAcC,KAAK,OAAOY,OAAO,UAAUpC,SAxF5C,SAACC,GAClB,IACMoC,EADwBpC,EAAtBE,OAAUmC,MACI,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IAAyBC,EAAaD,EAA9BE,cAAiBD,OACzBhD,EAAcgD,IAElBJ,EAAOM,cAAcR,IAgFgES,MAAO,CAAEC,QAAS,UAC9FrD,GAAc,sBAAK4B,UAAU,aAAf,UACX,sBAAMC,GAAG,gBAAgBI,QAtCf,kBAAMhC,EAAc,KAsC9B,uCACA,qBAAKqD,IAAKtD,EAAYuD,MAAM,YAEhC,sBAAM1B,GAAG,QAAT,SAAkBjC,IAClB,uBAAOkC,KAAK,SAASnB,MAAM,uCCW5B6C,EA7HG,WACd,IAAMhE,EAAWZ,oBAAS,kBAAM6E,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAAgB,KACvF,EAAsCjF,oBAAS,kBAAM6E,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAAgB,KAA5G,mBAAOC,EAAP,KAAoBC,EAApB,KACMpF,EAAUC,oBAAS,kBAAM6E,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,aAAe,KACrF,EAA4BjF,oBAAS,GAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAA8BjB,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAAoCnB,mBAAS,IAA7C,mBAAOoB,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,cA6BVC,EAAc,WAChBT,GAAU,SAAAU,GAAI,OAAKA,MAEjBO,EAAQ,uCAAG,WAAOL,GAAP,mBAAAC,EAAA,yDACbD,EAAMM,iBADO,SAGM,IAAXf,GAAe,IAAIgB,MAAM,4DACzBC,EAAgB,GACD,KAAff,EALK,wBAMCgB,EAAgBxC,EAAeyC,MAAMC,MAArB,UAA8BvC,EAAQ,GAAGwC,OAAzC,YAAmDC,gBANpE,SAOkBJ,EAAcK,UAAUrB,EAAY,YAPtD,cAOCsB,EAPD,iBAQiBA,EAASL,IAAIM,iBAR9B,eAQLR,EARK,iBASCzC,EAAUkD,WAAW,UAAUwC,IAAIxE,EAAS,GAAGqC,IAAIoC,OAAnD,2BAA+DH,GAA/D,IAA4E1E,QAAS2B,KATtF,iDAYCzC,EAAUkD,WAAW,UAAUwC,IAAIxE,EAAS,GAAGqC,IAAIoC,OAAnD,eAA+DH,IAZhE,QAcTH,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAUL,IACvD5D,EAAQwB,KAAK,KAfJ,kDAkBT7B,EAAS,KAAM8B,SAlBN,0DAAH,sDAuBRyC,EAAe,uCAAG,sBAAA5D,EAAA,6DACpB6D,QAAQC,IAAI9E,EAAS,GAAGJ,SADJ,SAEdZ,EAAe+F,WAAW/E,EAAS,GAAGJ,SAASoF,SAFjC,OAGpBvE,EAAc,IACd8D,GAAe,SAAAvE,GAAQ,kCAAUA,GAAV,IAAoBJ,QAAS,QAJhC,2CAAH,qDAMfkB,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,wDACuBD,EAA5BE,OAAUC,EADL,EACKA,KAAMC,EADX,EACWA,MACxBoD,GAAe,SAAAD,GAAW,kCAAUA,GAAV,kBAAwBpD,EAAOC,OAF5C,2CAAH,sDAId,OACA,sBAAKiB,UAAU,YAAf,UACI,sBAAMA,UAAU,QAAhB,mDACA,qBAAKA,UAAU,6BAAf,SACI,uBAAMhB,SAAUA,EAAUgB,UAAU,kBAApC,UACI,uDAAU,sBAAMC,GAAG,eAAT,kBACV,uBAAOC,KAAK,OAAOpB,KAAK,YAAYJ,SAAUA,EAAU0B,UAAQ,EAACrB,MAAOmD,EAAYjF,YAEpF,uDAAU,sBAAMgD,GAAG,eAAT,kBACV,uBAAOC,KAAK,OAAOpB,KAAK,eAAeJ,SAAUA,EAAU0B,UAAQ,EAACrB,MAAOmD,EAAYhF,eAEvF,8DAAY,sBAAM+C,GAAG,eAAT,kBACVnC,EAEI,qCAAE,sBAAMuC,QAAS7B,EAAayB,GAAG,aAA/B,0BAAqD,cAAC,IAAD,CACrDK,WApEG,SAACC,GACpB,IAAIC,EAAcD,EAAKrC,QACnBuC,EAAe,GAEM,MAArBF,EAAKG,cACc,KAAfH,EAAKI,QACLF,GAAgBF,EAAKI,OAEC,KAAtBJ,EAAKK,eACLH,GAAkC,KAAjBA,EAAA,YAA2BF,EAAKK,cAAiBL,EAAKK,cAE3EJ,GAAiC,KAAjBC,EAAA,YAA2BA,EAA3B,KAA6C,IAEjEtC,EAAWqC,GACXzC,GAAU,GACVoE,GAAe,SAAAD,GAAW,kCAAUA,GAAV,IAAuB/E,aAAcqD,QAqDnBR,UAAU,gBAF1C,sBAAMK,QAAS7B,EAAayB,GAAG,aAA/B,uCAIJ,sBAAMA,GAAG,UAAT,SAAoBiC,EAAY/E,eAEhC,6DACA,sBAAK6C,UAAU,uBAAf,UACI,uBAAOE,KAAK,OAAOC,YAAY,eAAKrB,KAAK,WAAWJ,SAAUA,EAAUK,MAAOmD,EAAY7E,WAC3F,uCACA,uBAAO6C,KAAK,OAAOC,YAAY,eAAKrB,KAAK,YAAYJ,SAAUA,EAAUK,MAAOmD,EAAY5E,eAGhG,mEACA,uBAAO4C,KAAK,MAAMpB,KAAK,YAAYJ,SAAUA,EAAUK,MAAOmD,EAAY9E,YAE1E,6DACA,cAAC,IAAD,CAAkB+C,YAAY,kCAASrB,KAAK,YAAYJ,SAAUA,EAAUK,MAAOmD,EAAY3E,UAAW0C,GAAG,aAE7G,6DACA,uBAAOA,GAAG,cAAcC,KAAK,OAAOY,OAAO,UAAUpC,SAhG5C,SAACC,GAClB,IACMoC,EADwBpC,EAAtBE,OAAUmC,MACI,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IAAyBC,EAAaD,EAA9BE,cAAiBD,OACzBhD,EAAcgD,IAElBJ,EAAOM,cAAcR,IAwFgES,MAAO,CAAEC,QAAS,UAC7FS,EAAY1E,QAKR,sBAAKwC,UAAU,aAAf,UACE,sBAAMC,GAAG,gBAAgBI,QAASmC,EAAlC,uCACA,qBAAKd,IAAKQ,EAAY1E,QAASmE,MAAM,YANzC,mCAAGvD,EACE,qCAAE,sBAAM6B,GAAG,gBAAgBI,QAhDtB,kBAAMhC,EAAc,KAgDvB,uCACC,qBAAKqD,IAAKtD,EAAYuD,MAAM,YAC9B,uBAAOd,IAAI,cAAcZ,GAAG,aAA5B,yCAMN,sBAAMA,GAAG,QAAT,SAAkBjC,IACtB,uBAAOkC,KAAK,SAASnB,MAAM,uC,QCrF5B8D,EAtCM,WAEjB,IAAQC,EAAUf,OAAVe,MACFlF,EAAWiE,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAAgB,EA2BxE,OA1BAc,qBAAU,WACN,IAAMC,EAAYC,SAASC,eAAe,OACpCC,EAAU,CACZC,OAAQ,IAAIN,EAAMO,KAAKC,OAAO,UAAW,YACzCC,MAAO,GAELC,EAAM,IAAIV,EAAMO,KAAKI,IAAIT,EAAWG,IAC3B,IAAIL,EAAMO,KAAKK,SAASC,UAC9BC,cAAchG,EAAST,cAAc,SAAUkE,EAAQwC,GAG5D,GAAIA,IAAWf,EAAMO,KAAKK,SAASI,OAAOC,GAAI,CAE1C,IAAIC,EAAS,IAAIlB,EAAMO,KAAKC,OAAOjC,EAAO,GAAG4C,EAAG5C,EAAO,GAAG6C,GAG7C,IAAIpB,EAAMO,KAAKc,OAAO,CAC/BX,IAAKA,EACLY,SAAUJ,IAGdR,EAAIa,UAAUL,SAIvB,CAACpG,EAAST,eAET,qBAAK8C,GAAG,MAAMuB,MAAO,CACjBG,MAAO,OACP2C,OAAQ,YC6ELC,EA7GI,WACf,MAAgCvH,oBAAS,kBAAM6E,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAAgB,KAAtG,mBAAOrE,EAAP,KAAiBC,EAAjB,KACA,EAAkCb,oBAAS,GAA3C,mBAAOwH,EAAP,KAAkBC,EAAlB,KACA,EAAgCzH,mBAAS,CACrC8B,KAAM,GACN4F,OAAQ,GACRC,SAAU,GACVC,aAAc,KAJlB,mBAAOC,EAAP,KAAiBC,EAAjB,KAOA/B,qBAAU,WACNrG,EAAU0F,IAAV,iBAAwBxE,EAASqC,KAAM8E,YAAW,SAACC,GAC/CjD,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAL,2BAAoByC,EAASzE,QAA7B,IAAqCN,GAAI+E,EAAS/E,OAC1FpC,EAAY,2BAAKmH,EAASzE,QAAf,IAAuBN,GAAI+E,EAAS/E,WAEpD,IACH,IAGMvB,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,wDACuBD,EAA5BE,OAAUC,EADL,EACKA,KAAMC,EADX,EACWA,MACxB+F,GAAY,SAAAD,GAAQ,kCAAUA,GAAV,kBAAqB/F,EAAOC,OAFnC,2CAAH,sDAIRC,EAAQ,uCAAG,WAAOL,GAAP,eAAAC,EAAA,6DACbD,EAAMM,iBACAgG,EAAO,IAAIC,KAFJ,SAGPxI,EAAU0F,IAAV,iBAAwBxE,EAASqC,KAAMoC,OAAO,CAChD3E,KAAME,EAASF,KAAO,IAJb,uBAMPhB,EAAUkD,WAAW,eAAewC,IAAIxE,EAASqC,IAAIkF,MAAMC,KAA3D,uCAAgE,WAAOD,GAAP,SAAAvG,EAAA,0DAC9DuG,EAAIE,OAD0D,gCAExD3I,EAAUkD,WAAW,eAAewC,IAAIxE,EAASqC,IAAIqF,IAAI,CAC3DC,QAAQ,GAAD,mBAAMJ,EAAI5E,OAAOgF,SAAjB,4BAA+BV,GAA/B,IAAyCD,aAAa,GAAD,OAAKK,EAAKO,WAAV,YAAwBP,EAAKQ,oBAH/B,6CAOxD/I,EAAUkD,WAAW,eAAewC,IAAIxE,EAASqC,IAAIqF,IAAI,CAC3DC,QAAS,CAAC,2BAAKV,GAAN,IAAgBD,aAAa,GAAD,OAAKK,EAAKO,WAAV,YAAwBP,EAAKQ,mBARR,2CAAhE,uDANO,OAkBbX,EAAY,CACRhG,KAAM,GACN4F,OAAQ,GACRC,SAAU,KAEdF,GAAa,GAvBA,2CAAH,sDA0Bd,OAAQ,mCACJ,sBAAKzE,UAAU,YAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,sBAAMC,GAAG,YAAT,SAAsBrC,EAASX,YAC/B,sBAAMgD,GAAG,eAAT,SAAyBrC,EAASV,eAElC,sBAAK8C,UAAU,WAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,gDACA,sBAAMC,GAAG,SAAT,SAAmBrC,EAASH,SAC5B,sBAAMwC,GAAG,QAAT,mCAEJ,sBAAKD,UAAU,qBAAf,UACI,gDACA,sBAAMC,GAAG,SAAT,SAAmBrC,EAASF,OAC5B,sBAAMuC,GAAG,QAAT,0BAGY,GAAnBrC,EAASH,QAAe,sBAAM4C,QAnD1B,WACboE,GAAa,SAAAhG,GAAI,OAAKA,MAkDoCuB,UAAU,cAAcC,GAAG,UAApD,SAA+DuE,EAAY,eAAO,6BAC1GA,GAAa,mCACV,sBAAKxE,UAAU,+BAAf,UACI,uBAAMhB,SAAUA,EAAUgB,UAAU,kBAApC,UACI,gCACI,sBAAKA,UAAU,gBAAf,UAA+B,gDAAe,uBAAOE,KAAK,OAAOpB,KAAK,OAAOsB,UAAQ,EAACrB,MAAO8F,EAAS/F,KAAMJ,SAAUA,OAEtH,sBAAKsB,UAAU,gBAAf,UAA+B,gDAAe,uBAAOE,KAAK,MAAMC,YAAY,SAAIrB,KAAK,SAASsB,UAAQ,EAACrB,MAAO8F,EAASH,OAAQhG,SAAUA,OACzI,sBAAKsB,UAAU,sBAAf,UAAqC,sDAAgB,uBAAOE,KAAK,MAAMwF,UAAU,KAAKvF,YAAY,+BAAWrB,KAAK,WAAWsB,UAAQ,EAACrB,MAAO8F,EAASF,SAAUjG,SAAUA,UAG9K,uBAAOsB,UAAU,cAAcE,KAAK,SAASnB,MAAM,oBAEvD,sBAAMiB,UAAU,OAAhB,uLAKZ,sBAAKA,UAAU,YAAf,UACI,sBAAMC,GAAG,QAAT,uCACA,+BAAOrC,EAAST,eAChB,cAAC,EAAD,IACA,uBAEA,sBAAM8C,GAAG,QAAT,6CACA,iCAAOrC,EAASR,UAAU,+BAAM,mBAAG4C,UAAU,cAAcC,GAAG,YAAY0F,KAAI,cAAS/H,EAASR,WAAhE,2CAChC,uBAEA,sBAAM6C,GAAG,QAAT,6CACA,+BAAOrC,EAASL,YAChB,uBAEA,sBAAM0C,GAAG,QAAT,uCACA,mDAAYrC,EAASP,SAArB,qBAAuCO,EAASN,aAChD,uBAEA,sBAAM2C,GAAG,QAAT,6CACA,+BAAOrC,EAASJ,QAAU,qBAAKmE,MAAM,QAAQD,IAAK9D,EAASJ,UAAc,e,gBC3E1EoI,EA3BA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAQjI,EAAY,EAAZA,SACfU,EAAQC,cAed,OAAO,mCAEH,sBAAKyB,UAAU,yBAAyBK,QAhBvB,WACjB0B,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAU3E,IACpDiI,EACCvH,EAAQwB,KAAK,CACTgG,SAAU,aACVC,MAAO,CAAEnI,SAAUA,KAGvBU,EAAQwB,KAAK,CACTgG,SAAU,cACVC,MAAO,CAAEnI,SAAUA,MAM3B,UACI,+BAAOA,EAASX,YAChB,sBAAMgD,GAAG,UAAT,SAAoBrC,EAASV,eAC7B,sBAAM+C,GAAG,KAAT,SAAe,cAAC,IAAD,CAAiB+F,KAAMC,cCiBnCC,EArCE,SAAC,GAAiB,IAAfnJ,EAAc,EAAdA,QACVuB,EAAUC,cAChB,EAA4BvB,mBAAS,IAArC,mBAAOmJ,EAAP,KAAeC,EAAf,KAqBA,OAXArD,qBAAU,WACNhB,OAAOC,aAAaqE,WAAW,YAC/B3J,EAAUkD,WAAW,UAAU0G,MAAM,YAAa,KAAMvJ,EAAQY,WAAWoH,YAAW,SAACwB,GACnF,IAAMC,EAAWD,EAASE,KAAKjD,KAAI,SAACpB,GAAD,oBAC/BnC,GAAImC,EAAInC,IACLmC,EAAI7B,WAEX6F,EAAUI,SAIV,mCAAE,sBAAKxG,UAAU,YAAf,UACN,sBAAKA,UAAU,iCAAf,UACI,sBAAMK,QAnBQ,WAClB0B,OAAOC,aAAaqE,WAAW,WAC/B7J,EAAYkK,UACZpI,EAAQwB,KAAK,MAgBqBG,GAAG,YAAjC,sCACA,gEAGHkG,EAAO3C,KAAI,SAACmD,GAAD,OAAW,cAAC,EAAD,CAAUd,QAAQ,EAAMjI,SAAU+I,OAEzD,uBAAMtG,QA5BS,WACf/B,EAAQwB,KAAK,cA2BcE,UAAU,cAAcC,GAAG,UAAtD,uCAAsE,cAAC,IAAD,CAAiB+F,KAAMY,eC0CtFC,EA5EG,WACd,MAAgC7J,oBAAS,kBAAM6E,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAAgB,KAAtG,mBAAOrE,EAAP,KAAiBC,EAAjB,KACA,EAAsCb,oBAAS,kBAAM6E,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAAgB,KAA5G,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BnF,oBAAS,GAArC,mBAAO8J,EAAP,KAAeC,EAAf,KACMzI,EAAUC,cAEhBwE,qBAAU,WACNrG,EAAU0F,IAAV,iBAAwBxE,EAASqC,KAAM8E,YAAW,SAACC,GAC/CjD,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAL,2BAAoByC,EAASzE,QAA7B,IAAqCN,GAAI+E,EAAS/E,OAC1FwC,QAAQC,IAAIsC,EAASzE,QACrB1C,EAAY,2BAAKmH,EAASzE,QAAf,IAAuBN,GAAI+E,EAAS/E,WAEpD,IAEH,IAQMvB,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,wDACuBD,EAA5BE,OAAUC,EADL,EACKA,KAAMC,EADX,EACWA,MACxBoD,GAAe,SAAAD,GAAW,kCAAUA,GAAV,kBAAwBpD,EAAOC,OAF5C,2CAAH,sDAIRC,EAAQ,uCAAG,WAAOL,GAAP,SAAAC,EAAA,6DACbD,EAAMM,iBADO,SAEPvC,EAAU0F,IAAV,iBAAwBxE,EAASqC,KAAMoC,OAAO,CAChD5E,OAAQyE,EAAYzE,OACpBC,KAAMwE,EAAYxE,OAJT,OAMbqJ,GAAU,GANG,2CAAH,sDAiBd,OACI,sBAAK/G,UAAU,YAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,sBAAMK,QATK,WACnB/B,EAAQwB,KAAK,aAQ0BG,GAAG,aAAlC,uCACA,sBAAMA,GAAG,aAAaI,QAPd,WAChB/B,EAAQwB,KAAK,eAML,mDAEA,sBAAMG,GAAG,YAAT,SAAsBrC,EAASX,YAC/B,sBAAMgD,GAAG,eAAT,SAAyBrC,EAASV,eAElC,sBAAK8C,UAAU,gCAAf,UACI,uBAAMhB,SAAUA,EAAUgB,UAAU,kBAApC,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,gDAAgB8G,EAAS,uBAAO5G,KAAK,OAAOnB,MAAOmD,EAAYzE,OAAQiB,SAAUA,EAAUI,KAAK,WAC1F,sBAAMmB,GAAG,SAAT,SAAmBrC,EAASH,SAClC,sBAAMwC,GAAG,QAAT,mCAEJ,sBAAKD,UAAU,qBAAf,UACI,gDACA,sBAAMC,GAAG,SAAT,SAAmBrC,EAASF,OAC5B,sBAAMuC,GAAG,QAAT,0BAGP6G,GAAU,uBAAO5G,KAAK,SAASnB,MAAM,oBAGxB,GAAjBnB,EAASF,MAAa,sBAAM2C,QAnC5B,WACb0G,GAAU,SAAAtI,GAAI,OAAKA,MAkCyCuB,UAAU,aAAnC,SAAiD8G,EAAS,eAAO,yEAIhG,sBAAMzG,QA3DK,WACJ0B,OAAOiF,QAAQ,uFAEtBtK,EAAU0F,IAAV,iBAAwBxE,EAASqC,KAAM2C,SACvClG,EAAU0F,IAAV,sBAA6BxE,EAASqC,KAAM2C,SAC5CtE,EAAQwB,KAAK,OAsDcG,GAAG,YAA9B,2C,iBC+BGgH,EApGF,WACT,MAA4BjK,oBAAS,GAArC,mBAAO6I,EAAP,KAAeqB,EAAf,KACA,EAA4BlK,oBAAS,GAArC,mBAAOmK,EAAP,KAAeC,EAAf,KACA,EAA8BpK,mBAAS,CACnCqK,MAAO,GACPC,SAAU,KAFd,mBAAOC,EAAP,KAAgBC,EAAhB,KAIA,EAA2BxK,mBAAS,IAApC,mBAAOyK,EAAP,KAAeC,EAAf,KACA,EAA4B1K,mBAAS,IAArC,mBAAOmJ,EAAP,KAAeC,EAAf,KACA,EAAkCpJ,mBAAS,IAA3C,mBAAO2K,EAAP,KAAkBC,EAAlB,KACMC,EAAgB,WAClBX,GAAU,SAACzI,GAAD,OAAWA,KACrBmJ,EAAa,KAOXlJ,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,wDACuBD,EAA5BE,OAAUC,EADL,EACKA,KAAMC,EADX,EACWA,MACZ,UAARD,EACA4I,EAAS3I,GAERyI,GAAW,SAAAD,GAAO,kCAAUA,GAAV,kBAAoBzI,EAAOC,OALrC,2CAAH,sDAORC,EAAQ,uCAAG,WAAOL,GAAP,SAAAC,EAAA,yDACbD,EAAMM,iBADO,UAILkI,EAJK,gCAKQ3K,EAAYsL,+BAA+BP,EAAQF,MAAOE,EAAQD,UAL1E,sDAQQ9K,EAAYuL,2BAA2BR,EAAQF,MAAOE,EAAQD,UARtE,yEAYTM,EAAa,KAAM7H,SAZV,0DAAH,sDA0Bd,OAXAgD,qBAAU,WACF0E,GACA/K,EAAUkD,WAAW,UAAUmF,YAAW,SAACwB,GACvC,IAAMC,EAAWD,EAASE,KAAKuB,QAAO,SAAC5F,GAAD,OAAiD,GAAxCA,EAAI7B,OAAOtD,UAAUgL,QAAQR,MAAcjE,KAAI,SAACpB,GAAD,oBAC1FnC,GAAImC,EAAInC,IACLmC,EAAI7B,WAEX6F,EAAUI,SAId,mCACJ,qBAAKxG,UAAU,YAAf,SACK6F,EACG,qCACI,uBAAM5F,GAAG,aAAaI,QAASwH,EAA/B,UAA8C,cAAC,IAAD,CAAiB7B,KAAMkC,MAArE,IAAwFrC,EAAS,qBAAQ,wBAEzG,sBAAK7F,UAAU,gCAAf,UAEI,qBAAK0B,IAAI,WAAWC,MAAM,UAC1B,uBAAM3C,SAAUA,EAAUgB,UAAU,kBAApC,UACI,uBAAOE,KAAK,OAAOpB,KAAK,QAAQqB,YAAY,qBAAMzB,SAAUA,EAAU0B,UAAQ,EAACrB,MAAOwI,EAAQF,QAC9F,uBAAOnH,KAAK,WAAWpB,KAAK,WAAWqB,YAAY,2BAAOzB,SAAUA,EAAU0B,UAAQ,EAACrB,MAAOwI,EAAQD,WACtG,uBAAOpH,KAAK,SAASnB,MAAOoI,EAAS,eAAO,0BAEhD,sBAAMlH,GAAG,QAAT,SAAkB0H,IAClB,sBAAMtH,QArDN,WAChB+G,GAAU,SAAC3I,GAAD,OAAWA,KACrBmJ,EAAa,KAmD+B3H,GAAG,SAA/B,SAAyCkH,EAAS,qBAAQ,0CAKlE,qCAEI,uBAAMlH,GAAG,aAAaI,QAASwH,EAA/B,UAA8C,cAAC,IAAD,CAAiB7B,KAAMkC,MAArE,IAAwFrC,EAAS,qBAAQ,wBACzG,qBAAK7F,UAAU,iCAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAK0B,IAAI,WAAWC,MAAM,UAC1B,uBAAOzB,KAAK,OAAOC,YAAY,qBAAMrB,KAAK,SAASC,MAAO0I,EAAQ/I,SAAUA,SAIlFyH,EAAOgC,OAWH,qBAAKnI,UAAU,YAAf,SAA4BmG,EAAO3C,KAAI,SAACmD,GAAD,OAAW,cAAC,EAAD,CAAU/I,SAAU+I,EAAOd,QAAQ,SAXzE,mCACH,IAAV4B,EACG,sBAAKzH,UAAU,oCAAf,UACI,iGACA,cAAC,IAAD,CAAiBgG,KAAMoC,SAG3B,sBAAKpI,UAAU,oCAAoCC,GAAG,eAAtD,UACI,2FACA,cAAC,IAAD,CAAiB+F,KAAMqC,IAAkB1G,MAAM,sBCtEhE2G,EAzBI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAY3K,EAAe,EAAfA,SAa9B,OAAQ,mCACJ,sBAAKoC,UAAU,2BAAf,UACI,+BAAOuI,EAAWzJ,OAClB,mDAAYyJ,EAAW7D,UACvB,yDAAa6D,EAAW5D,YACxB,sBAAM1E,GAAG,OAAT,SAAiBsI,EAAW3D,eAC5B,sBAAMvE,QAjBO,WACjBmI,IAAMrD,IAAN,eAAkBoD,EAAW5D,SAA7B,YAAyC/G,EAASX,YAAamI,MAAK,SAAAqD,GAAG,OAAIhG,QAAQC,IAAI+F,EAAIlI,SAC3F7D,EAAU0F,IAAV,sBAA6BxE,EAASqC,KAAMkF,MAAMC,MAAK,SAACD,GACpDzI,EAAU0F,IAAV,sBAA6BxE,EAASqC,KAAMoC,OAAO,CAC/CkD,QAASJ,EAAI5E,OAAOgF,QAAQmD,MAAM,EAAGvD,EAAI5E,OAAOgF,QAAQ4C,UAE5DzL,EAAU0F,IAAV,iBAAwBxE,EAASqC,KAAMoC,OAAO,CAC1C3E,KAAMyH,EAAI5E,OAAOgF,QAAQ4C,OAAS,QAUTnI,UAAU,YAAvC,gCCSG2I,EA3BC,WACZ,MAAoC3L,mBAAS,IAA7C,mBAAO4L,EAAP,KAAmBC,EAAnB,KACA,EAAgC7L,oBAAS,kBAAM6E,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAAgB,KAAtG,mBAAOrE,EAAP,UAQA,OAPAmF,qBAAU,WACNrG,EAAU0F,IAAV,sBAA6BxE,EAASqC,KAAM8E,YAAW,SAACwB,GACjDA,EAASlB,QACZwD,EAActC,EAAShG,OAAOgF,eAI9B,mCACJ,sBAAKvF,UAAU,YAAf,UACI,sBAAMA,UAAU,QAAhB,6CACA,uBAAMC,GAAG,gBAAT,0BAA6B2I,EAAWT,OAAxC,YACCS,EAAWpF,KAAI,SAAC+B,GAAD,OACZ,cAAC,EAAD,CAAYgD,WAAYhD,EAAS3H,SAAUA,QAE7CgL,EAAWT,QAAQ,mCACb,sBAAMnI,UAAU,eAAhB,wECyBL8I,EAtCG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQhM,EAAc,EAAdA,QACzB,OAAQ,cAAC,IAAD,UACJ,cAAC,IAAD,UACKgM,EACG,qCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAUlM,QAASA,MAEvB,cAAC,IAAD,CAAOiM,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC,EAAD,CAAUlM,QAASA,MAEvB,cAAC,IAAD,CAAOiM,OAAK,EAACC,KAAK,aAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACI,cAAC,EAAD,SAMR,qCACI,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACI,cAAC,EAAD,cCATC,MApCf,WACE,MAA4BlM,oBAAS,GAArC,mBAAO+L,EAAP,KAAe7B,EAAf,KACA,EAAwBlK,oBAAS,GAAjC,mBAAOmM,EAAP,KAAaC,EAAb,KACA,EAA8BpM,mBAAS,CACrCW,UAAW,GACX4B,OAAQ,KAFV,mBAAOxC,EAAP,KAAgBsM,EAAhB,KAwBA,OApBAtG,qBAAU,WACRvG,EAAY8M,mBAAZ,+BAAA1K,EAAA,MAA+B,WAAO2K,GAAP,SAAA3K,EAAA,sDACzB2K,GACFrC,GAAU,GACVmC,EAAW,CACT1L,UAAW4L,EAAKlC,MAChB9H,OAAQgK,EAAKC,MAEfzH,OAAOC,aAAaM,QAAQ,UAAWT,KAAKU,UAAU,CACpD5E,UAAW4L,EAAKlC,MAChB9H,OAAQgK,EAAKC,QAGZtC,GAAU,GAEfkC,GAAQ,GAdqB,2CAA/B,yDAiBC,IAEK,qCAEN,+BAAM,sBAAMtK,KAAK,WAAW2K,QAAQ,6DACnCN,EAAO,cAAC,EAAD,CAAWJ,OAAQA,EAAQhM,QAASA,IAAc,sBAAMkD,GAAG,UAAT,wBAC1D,kDAAsB,IAAIiF,MAAOwE,cAAjC,oB,MC7BJC,IAASC,OAAO,mCACd,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGF5G,SAASC,eAAe,W","file":"static/js/main.087ac584.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig ={\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_MESSAGIN_ID,\r\n    appId:  process.env.REACT_APP_APP_ID,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance =firebase;\r\nexport const authService=firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n\r\n","import REACT, { useState } from 'react';\r\nimport DaumPostCode from 'react-daum-postcode';\r\nimport { useHistory } from 'react-router';\r\nimport { dbService, storageService } from '../fbase';\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst AddStore = ({ hostObj }) => {\r\n    const [storeObj, setStoreObj] = useState({\r\n        storeName: \"\",\r\n        storeSubName: \"\",\r\n        storeAddress: \"\",\r\n        storeCall: \"\",\r\n        openTime: \"\",\r\n        closeTime: \"\",\r\n        storeInfo: \"\",\r\n        menuURL: \"\",\r\n        remain: 0,\r\n        wait: 0,\r\n        hostEmail: hostObj.hostEmail,\r\n    });\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [attachment, setAttachment] = useState();\r\n    const history = useHistory();\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = '';\r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setAddress(fullAddress);\r\n        setIsOpen(false);\r\n        setStoreObj(storeObj => ({ ...storeObj, storeAddress: fullAddress }))\r\n    }\r\n    const onPostClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    }\r\n    const onChange = async (event) => {\r\n        const { target: { name, value } } = event;\r\n        setStoreObj(storeObj => ({ ...storeObj, [name]: value }));\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (address == \"\") new Error(\"주소를 입력해주세요.\");\r\n            let attachmentURL = \"\";\r\n            if (attachment !== \"\") {\r\n                const attachmentRef = storageService.ref().child(`${hostObj.hostId}/${uuidv4()}`);\r\n                const response = await attachmentRef.putString(attachment, \"data_url\");\r\n                attachmentURL = await response.ref.getDownloadURL();\r\n            }\r\n            await dbService.collection(\"Stores\").add({ ...storeObj, menuURL: attachmentURL });\r\n\r\n            history.push(\"/\");\r\n        }\r\n        catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n    <div className=\"Container\">\r\n        <span className=\"title\">나의 매장 등록 </span>\r\n        <div className=\"centerContainer aboutStore\">\r\n            <form onSubmit={onSubmit} className=\"aboutStore-form\">\r\n                <span>매장명 <span id=\"require-mark\">*</span></span>\r\n                <input type=\"text\" placeholder=\"매장명\" name=\"storeName\" onChange={onChange} required value={storeObj.storeName} />\r\n                \r\n                <span>지점명 <span id=\"require-mark\">*</span></span>\r\n                <input type=\"text\" placeholder=\"지점명\" name=\"storeSubName\" onChange={onChange} required value={storeObj.storeSubName} />\r\n                \r\n                <span>매장 주소 <span id=\"require-mark\">*</span></span>\r\n                {!isOpen ?\r\n                    <span onClick={onPostClick} id=\"search-box\">주소 검색</span>\r\n                    : <><span onClick={onPostClick} id=\"search-box\">취소</span><DaumPostCode\r\n                        onComplete={handleComplete} className=\"postCode\"\r\n                    /></>}\r\n                <span id=\"address\">{address}</span>\r\n                \r\n                <span>영업 시간</span>\r\n                <div className=\"aboutStore-form-time\">\r\n                    <input type=\"tel\" placeholder=\"오픈\" name=\"openTime\" onChange={onChange} value={storeObj.openTime} />\r\n                    <span> - </span>\r\n                    <input type=\"tel\" placeholder=\"마감\" name=\"closeTime\" onChange={onChange} value={storeObj.closeTime} />\r\n                </div>\r\n\r\n                <span>매장 연락처</span>\r\n                <input type=\"tel\" name=\"storeCall\" onChange={onChange} required value={storeObj.storeCall} />\r\n                \r\n                <span>매장 소개</span>\r\n                <TextareaAutosize placeholder=\"매장 소개글\" name=\"storeInfo\" onChange={onChange} value={storeObj.storeInfo} id=\"textArea\" />\r\n                \r\n                <span>메뉴 사진</span>\r\n                {!attachment && <label for=\"attach-Menu\" id=\"search-box\">사진 선택</label>}\r\n                <input id=\"attach-Menu\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ display: 'none' }} />\r\n                {attachment && <div className=\"attachment\">\r\n                    <span id=\"attachmentDel\" onClick={onClearAttachment}>사진 취소</span>\r\n                    <img src={attachment} width=\"100%\" />\r\n                </div>}\r\n                <span id=\"error\">{error}</span>\r\n                <input type=\"submit\" value=\"매장 등록\" />\r\n\r\n            </form>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default AddStore;","import REACT, { useState } from 'react';\r\nimport DaumPostCode from 'react-daum-postcode';\r\nimport { useHistory } from 'react-router';\r\nimport { dbService, storageService } from '../fbase';\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst EditStore = () => {\r\n    const storeObj = useState(() => JSON.parse(window.localStorage.getItem(\"storeObj\")) || 0);\r\n    const [newStoreObj, setNewStoreObj] = useState(() => JSON.parse(window.localStorage.getItem(\"storeObj\")) || 0);\r\n    const hostObj = useState(() => JSON.parse(window.localStorage.getItem(\"hostObj\")) || 0);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = '';\r\n\r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setAddress(fullAddress); // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\r\n        setIsOpen(false);\r\n        setNewStoreObj(newStoreObj => ({ ...newStoreObj, storeAddress: fullAddress }))\r\n    }\r\n    const onPostClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (address == \"\") new Error(\"주소를 입력해주세요.\");\r\n            let attachmentURL = \"\";\r\n            if (attachment !== \"\") {\r\n                const attachmentRef = storageService.ref().child(`${hostObj[0].hostId}/${uuidv4()}`);\r\n                const response = await attachmentRef.putString(attachment, \"data_url\");\r\n                attachmentURL = await response.ref.getDownloadURL();\r\n                await dbService.collection(\"Stores\").doc(storeObj[0].id).update({ ...newStoreObj, menuURL: attachmentURL });\r\n            }\r\n            else {\r\n                await dbService.collection(\"Stores\").doc(storeObj[0].id).update({ ...newStoreObj });\r\n            }\r\n            window.localStorage.setItem(\"storeObj\", JSON.stringify(newStoreObj))\r\n            history.push(\"/\");\r\n        }\r\n        catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n\r\n    const onDelAttachment = async () => {\r\n        console.log(storeObj[0].menuURL)\r\n        await storageService.refFromURL(storeObj[0].menuURL).delete();\r\n        setAttachment(\"\");\r\n        setNewStoreObj(storeObj => ({ ...storeObj, menuURL: \"\" }));\r\n    }\r\n    const onChange = async (event) => {\r\n        const { target: { name, value } } = event;\r\n        setNewStoreObj(newStoreObj => ({ ...newStoreObj, [name]: value }));\r\n    }\r\n    return (\r\n    <div className=\"Container\">\r\n        <span className=\"title\">매장정보 수정</span>\r\n        <div className=\"centerContainer aboutStore\">\r\n            <form onSubmit={onSubmit} className=\"aboutStore-form\">\r\n                <span>매장명 <span id=\"require-mark\">*</span></span>\r\n                <input type=\"text\" name=\"storeName\" onChange={onChange} required value={newStoreObj.storeName} />\r\n                \r\n                <span>지점명 <span id=\"require-mark\">*</span></span>\r\n                <input type=\"text\" name=\"storeSubName\" onChange={onChange} required value={newStoreObj.storeSubName} />\r\n                \r\n                <span>매장 주소 <span id=\"require-mark\">*</span></span>\r\n                {!isOpen ?\r\n                    <span onClick={onPostClick} id=\"search-box\">주소 검색</span>\r\n                    : <><span onClick={onPostClick} id=\"search-box\">취소</span><DaumPostCode\r\n                        onComplete={handleComplete} className=\"postCode\"\r\n                    /></>}\r\n                <span id=\"address\">{newStoreObj.storeAddress}</span>\r\n                \r\n                <span>영업 시간</span>\r\n                <div className=\"aboutStore-form-time\">\r\n                    <input type=\"text\" placeholder=\"오픈\" name=\"openTime\" onChange={onChange} value={newStoreObj.openTime} />\r\n                    <span> - </span>\r\n                    <input type=\"text\" placeholder=\"마감\" name=\"closeTime\" onChange={onChange} value={newStoreObj.closeTime} />\r\n                </div>\r\n                \r\n                <span>매장 연락처</span>\r\n                <input type=\"tel\" name=\"storeCall\" onChange={onChange} value={newStoreObj.storeCall} />\r\n\r\n                <span>매장 소개</span>\r\n                <TextareaAutosize placeholder=\"매장 소개글\" name=\"storeInfo\" onChange={onChange} value={newStoreObj.storeInfo} id=\"textArea\" />\r\n                \r\n                <span>메뉴 사진</span>\r\n                <input id=\"attach-Menu\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ display: 'none' }} />\r\n                {!newStoreObj.menuURL ?\r\n                    <>{attachment ?\r\n                        (<><span id=\"attachmentDel\" onClick={onClearAttachment}>사진 취소</span>\r\n                            <img src={attachment} width=\"100%\" /></>)\r\n                        : <label for=\"attach-Menu\" id=\"search-box\">사진 선택</label>}</>\r\n                    : <div className=\"attachment\">\r\n                        <span id=\"attachmentDel\" onClick={onDelAttachment}>사진 삭제</span>\r\n                        <img src={newStoreObj.menuURL} width=\"100%\" />\r\n                    </div>}\r\n                    \r\n                    <span id=\"error\">{error}</span>\r\n                <input type=\"submit\" value=\"수정 완료\" />\r\n\r\n            </form>\r\n        </div>\r\n\r\n    </div>);\r\n}\r\nexport default EditStore;","import React, { useEffect } from 'react';\r\n\r\nconst MapContainer = () => {\r\n\r\n    const { kakao } = window;\r\n    const storeObj = JSON.parse(window.localStorage.getItem(\"storeObj\")) || 0;\r\n    useEffect(() => {\r\n        const container = document.getElementById('map');\r\n        const options = {\r\n            center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n            level: 3\r\n        };\r\n        const map = new kakao.maps.Map(container, options);\r\n        var geocoder = new kakao.maps.services.Geocoder();\r\n        geocoder.addressSearch(storeObj.storeAddress, function (result, status) {\r\n\r\n            \r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n                \r\n                var marker = new kakao.maps.Marker({\r\n                    map: map,\r\n                    position: coords\r\n                });\r\n\r\n                map.setCenter(coords);\r\n            }\r\n        });\r\n\r\n    }, [storeObj.storeAddress]);\r\n    return (\r\n        <div id='map' style={{\r\n            width: '100%',\r\n            height: '300px'\r\n        }}></div>\r\n    );\r\n}\r\n\r\nexport default MapContainer;","import REACT, { useEffect, useState } from 'react';\r\nimport MapContainer from '../components/MapContainer';\r\nimport { dbService } from '../fbase';\r\nconst GuestStore = () => {\r\n    const [storeObj, setStoreObj] = useState(() => JSON.parse(window.localStorage.getItem(\"storeObj\")) || 0);\r\n    const [isReserve, setIsReserve] = useState(false);\r\n    const [customer, setCustomer] = useState({\r\n        name: \"\",\r\n        people: \"\",\r\n        phoneNum: \"\",\r\n        createAtTime: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        dbService.doc(`Stores/${storeObj.id}`).onSnapshot((snapshot) => {\r\n            window.localStorage.setItem(\"storeObj\", JSON.stringify({ ...snapshot.data(), id: snapshot.id }))\r\n            setStoreObj({ ...snapshot.data(), id: snapshot.id });\r\n        })\r\n    }, [])\r\n    const ontoggle = () => {\r\n        setIsReserve(prev => !prev);\r\n    }\r\n    const onChange = async (event) => {\r\n        const { target: { name, value } } = event;\r\n        setCustomer(customer => ({ ...customer, [name]: value }))\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const date = new Date();\r\n        await dbService.doc(`Stores/${storeObj.id}`).update({\r\n            wait: storeObj.wait + 1\r\n        })\r\n        await dbService.collection(\"ReserveList\").doc(storeObj.id).get().then(async (get) => {\r\n            if (get.exists) {\r\n                await dbService.collection(\"ReserveList\").doc(storeObj.id).set({\r\n                    waiting: [...get.data().waiting, { ...customer, createAtTime: `${date.getHours()}:${date.getMinutes()}` }]\r\n                })\r\n            }\r\n            else {\r\n                await dbService.collection(\"ReserveList\").doc(storeObj.id).set({\r\n                    waiting: [{ ...customer, createAtTime: `${date.getHours()}:${date.getMinutes()}` }]\r\n                })\r\n            }\r\n        });\r\n        setCustomer({\r\n            name: \"\",\r\n            people: \"\",\r\n            phoneNum: \"\",\r\n        });\r\n        setIsReserve(false);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"Container\">\r\n            <div className=\"centerContainer storeContainer\">\r\n                <span id=\"storeName\">{storeObj.storeName}</span>\r\n                <span id=\"storeSubName\">{storeObj.storeSubName}</span>\r\n\r\n                <div className=\"waitInfo\">\r\n                    <div className=\"waitInfo-span-wrap\">\r\n                        <span>여석</span>\r\n                        <span id=\"number\">{storeObj.remain}</span>\r\n                        <span id=\"small\">테이블</span>\r\n                    </div>\r\n                    <div className=\"waitInfo-span-wrap\">\r\n                        <span>대기</span>\r\n                        <span id=\"number\">{storeObj.wait}</span>\r\n                        <span id=\"small\">팀</span>\r\n                    </div>\r\n                </div>\r\n                {storeObj.remain == 0 && <span onClick={ontoggle} className=\"blue-button\" id=\"reserve\">{isReserve ? \"취소\" : \"예약하기\"}</span>}\r\n                {isReserve && <>\r\n                    <div className=\"centerContainer reserve-wrap\">\r\n                        <form onSubmit={onSubmit} className=\"centerContainer\">\r\n                            <div>\r\n                                <div className=\"reserve-input\"><span>이름</span><input type=\"text\" name=\"name\" required value={customer.name} onChange={onChange} />\r\n                                </div>\r\n                                <div className=\"reserve-input\"><span>인원</span><input type=\"tel\" placeholder=\"명\" name=\"people\" required value={customer.people} onChange={onChange} /></div>\r\n                                <div className=\"reserve-input phone\"><span>연락처</span><input type=\"tel\" maxLength=\"11\" placeholder=\"(-)없이 입력\" name=\"phoneNum\" required value={customer.phoneNum} onChange={onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <input className=\"blue-button\" type=\"submit\" value=\"예약\" />\r\n                        </form>\r\n                        <span className=\"ment\">입장 문자 발송 후, 5분이내로 입장하지 않으면 자동 취소됩니다.</span>\r\n                    </div>\r\n                </>}\r\n            </div>\r\n\r\n            <div className=\"storeinfo\">\r\n                <span id=\"title\">매장 위치</span>\r\n                <span>{storeObj.storeAddress}</span>\r\n                <MapContainer />\r\n                <hr />\r\n                \r\n                <span id=\"title\">매장 연락처</span>\r\n                <span>{storeObj.storeCall}<span><a className=\"blue-button\" id=\"call-link\" href={`tel:${storeObj.storeCall}`}>전화걸기</a></span></span>\r\n                <hr />\r\n                \r\n                <span id=\"title\">매장 소개글</span>\r\n                <span>{storeObj.storeInfo}</span>\r\n                <hr />\r\n                \r\n                <span id=\"title\">영업 시간</span>\r\n                <span>오픈 : {storeObj.openTime} - 마감 : {storeObj.closeTime}</span>\r\n                <hr />\r\n\r\n                <span id=\"title\">메뉴판 사진</span>\r\n                <span>{storeObj.menuURL ? <img width=\"350px\" src={storeObj.menuURL} /> : \".\"}</span>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\nexport default GuestStore;","import REACT, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst StoreBox=({isHost, storeObj})=>{\r\n    const history=useHistory();\r\n    const onStoreClick = () => {\r\n        window.localStorage.setItem(\"storeObj\", JSON.stringify(storeObj))\r\n        if(isHost){\r\n            history.push({\r\n                pathname: \"/hostStore\",\r\n                state: { storeObj: storeObj }\r\n            });\r\n        }else{\r\n            history.push({\r\n                pathname: \"/guestStore\",\r\n                state: { storeObj: storeObj }\r\n            });\r\n        }    \r\n    }\r\n    return(<>\r\n        \r\n        <div className=\"box-container storeBox\" onClick={onStoreClick}>\r\n            <span>{storeObj.storeName}</span>\r\n            <span id=\"subName\">{storeObj.storeSubName}</span>\r\n            <span id=\"go\" ><FontAwesomeIcon icon={faChevronRight}/></span>\r\n        </div>\r\n       \r\n    </>);\r\n\r\n}\r\nexport default StoreBox;","import REACT, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { authService, dbService } from '../fbase';\r\nimport StoreBox from '../components/StoreBox.js'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nconst HostHome = ({ hostObj }) => {\r\n    const history = useHistory();\r\n    const [stores, setStores] = useState([]);\r\n    const onAddClick = () => {\r\n        history.push(\"/AddStore\");\r\n    }\r\n    const onLogOutClick = () => {\r\n        window.localStorage.removeItem(\"hostObj\");\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.localStorage.removeItem(\"storeObj\");\r\n        dbService.collection(\"Stores\").where(\"hostEmail\", \"==\", hostObj.hostEmail).onSnapshot((Snapshot) => {\r\n            const storeArr = Snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }))\r\n            setStores(storeArr);\r\n        })\r\n    })\r\n\r\n    return (<><div className=\"Container\">\r\n        <div className=\"centerContainer title hostHome\">\r\n            <span onClick={onLogOutClick} id=\"side-menu\">로그아웃</span>\r\n            <span>나의 매장</span>\r\n        </div>\r\n\r\n        {stores.map((store) => <StoreBox isHost={true} storeObj={store} />)}\r\n\r\n        <span onClick={onAddClick} className=\"blue-button\" id=\"add-btn\">매장 추가 <FontAwesomeIcon icon={faPlus} /></span>\r\n\r\n    </div>\r\n\r\n    </>);\r\n}\r\nexport default HostHome;","import REACT, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { dbService } from '../fbase';\r\nconst HostStore = () => {\r\n    const [storeObj, setStoreObj] = useState(() => JSON.parse(window.localStorage.getItem(\"storeObj\")) || 0)\r\n    const [newStoreObj, setNewStoreObj] = useState(() => JSON.parse(window.localStorage.getItem(\"storeObj\")) || 0);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dbService.doc(`Stores/${storeObj.id}`).onSnapshot((snapshot) => {\r\n            window.localStorage.setItem(\"storeObj\", JSON.stringify({ ...snapshot.data(), id: snapshot.id }))\r\n            console.log(snapshot.data())\r\n            setStoreObj({ ...snapshot.data(), id: snapshot.id });\r\n        })\r\n    }, [])\r\n\r\n    const onDelClick = () => {\r\n        const ok = window.confirm(\"매장을 정말 삭제하시겠습니까?\");\r\n        if (ok) {\r\n            dbService.doc(`Stores/${storeObj.id}`).delete();\r\n            dbService.doc(`ReserveList/${storeObj.id}`).delete();\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    const onChange = async (event) => {\r\n        const { target: { name, value } } = event;\r\n        setNewStoreObj(newStoreObj => ({ ...newStoreObj, [name]: value }))\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`Stores/${storeObj.id}`).update({\r\n            remain: newStoreObj.remain,\r\n            wait: newStoreObj.wait,\r\n        })\r\n        setIsEdit(false);\r\n    }\r\n    const ontoggle = () => {\r\n        setIsEdit(prev => !prev);\r\n    }\r\n    const onWaitingClick = () => {\r\n        history.push(\"/waiting\");\r\n    }\r\n    const onEditClick = () => {\r\n        history.push(\"/editStore\");\r\n    }\r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"centerContainer storeContainer\">\r\n                <span onClick={onWaitingClick} id=\"side-menu2\">대기 관리</span>\r\n                <span id=\"side-menu3\" onClick={onEditClick}>매장정보 수정</span>\r\n\r\n                <span id=\"storeName\">{storeObj.storeName}</span>\r\n                <span id=\"storeSubName\">{storeObj.storeSubName}</span>\r\n\r\n                <div className=\"centerContainer waitInfo-wrap\">\r\n                    <form onSubmit={onSubmit} className=\"centerContainer\">\r\n                        <div className=\"waitInfo\">\r\n                            <div className=\"waitInfo-span-wrap\">\r\n                                <span>여석</span>{isEdit ? <input type=\"text\" value={newStoreObj.remain} onChange={onChange} name=\"remain\" />\r\n                                    : <span id=\"number\">{storeObj.remain}</span>}\r\n                                <span id=\"small\">테이블</span>\r\n                            </div>\r\n                            <div className=\"waitInfo-span-wrap\">\r\n                                <span>대기</span>\r\n                                <span id=\"number\">{storeObj.wait}</span>\r\n                                <span id=\"small\">팀</span>\r\n                            </div>\r\n                        </div>\r\n                        {isEdit && <input type=\"submit\" value=\"변경\" />}\r\n                    </form>\r\n\r\n                    {storeObj.wait == 0 && <span onClick={ontoggle} className=\"toggle-btn\">{isEdit ? \"취소\" : <>여석 수정</>}</span>}\r\n                </div>\r\n            </div>\r\n\r\n            <span onClick={onDelClick} id=\"store-del\">매장 제거</span>\r\n        </div>);\r\n}\r\nexport default HostStore;","import REACT, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport StoreBox from '../components/StoreBox';\r\nimport { authService, dbService } from '../fbase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExchangeAlt, faSearch, faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from 'axios';\r\nconst Main = () => {\r\n    const [isHost, setIsHost] = useState(false);\r\n    const [isJoin, setIsJoin] = useState(false);\r\n    const [joinObj, setJoinObj] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n    const [search, setSerch] = useState(\"\");\r\n    const [stores, setStores] = useState([]);\r\n    const [errorMess, setErrorMess] = useState(\"\");\r\n    const onSelectClick = () => {\r\n        setIsHost((prev) => !prev);\r\n        setErrorMess(\"\");\r\n    }\r\n    const onJoinClick = () => {\r\n        setIsJoin((prev) => !prev);\r\n        setErrorMess(\"\");\r\n    }\r\n\r\n    const onChange = async (event) => {\r\n        const { target: { name, value } } = event;\r\n        if (name == \"search\") {\r\n            setSerch(value);\r\n        }\r\n        else setJoinObj(joinObj => ({ ...joinObj, [name]: value }));\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (isJoin) {\r\n                data = await authService.createUserWithEmailAndPassword(joinObj.email, joinObj.password);\r\n            }\r\n            else {\r\n                data = await authService.signInWithEmailAndPassword(joinObj.email, joinObj.password);\r\n            }\r\n        }\r\n        catch (error) {\r\n            setErrorMess(error.message);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (search) {\r\n            dbService.collection(\"Stores\").onSnapshot((Snapshot) => {\r\n                const storeArr = Snapshot.docs.filter((doc) => doc.data().storeName.indexOf(search) == 0).map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }))\r\n                setStores(storeArr);\r\n            })\r\n        }\r\n    })\r\n    return (<>\r\n        <div className=\"Container\">\r\n            {isHost ?\r\n                <>\r\n                    <span id=\"changeSpan\" onClick={onSelectClick}><FontAwesomeIcon icon={faExchangeAlt} /> {isHost ? \"게스트\" : \"호스트\"}</span>\r\n\r\n                    <div className=\"centerContainer hostContainer\">\r\n\r\n                        <img src=\"logo.png\" width=\"200px\" />\r\n                        <form onSubmit={onSubmit} className=\"centerContainer\">\r\n                            <input type=\"text\" name=\"email\" placeholder=\"이메일\" onChange={onChange} required value={joinObj.email} />\r\n                            <input type=\"password\" name=\"password\" placeholder=\"비밀번호\" onChange={onChange} required value={joinObj.password} />\r\n                            <input type=\"submit\" value={isJoin ? \"가입\" : \"로그인\"} />\r\n                        </form>\r\n                        <span id=\"error\">{errorMess}</span>\r\n                        <span onClick={onJoinClick} id=\"toggle\">{isJoin ? \"로그인\" : \"호스트 가입\"}</span>\r\n                    </div>\r\n\r\n                </>\r\n                :\r\n                <>\r\n\r\n                    <span id=\"changeSpan\" onClick={onSelectClick}><FontAwesomeIcon icon={faExchangeAlt} /> {isHost ? \"게스트\" : \"호스트\"}</span>\r\n                    <div className=\"centerContainer guestContainer\">\r\n                        <div className=\"centerContainer search\">\r\n                            <img src=\"logo.png\" width=\"200px\" />\r\n                            <input type=\"text\" placeholder=\"매장명\" name=\"search\" value={search} onChange={onChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {!stores.length ? <>\r\n                        {search == \"\" ?\r\n                            <div className=\"centerContainer guest-search-ment\">\r\n                                <span>매장명을 검색해보세요</span>\r\n                                <FontAwesomeIcon icon={faSearch} />\r\n                            </div>\r\n                            :\r\n                            <div className=\"centerContainer guest-search-ment\" id=\"nothing-ment\">\r\n                                <span>검색결과가 없습니다</span>\r\n                                <FontAwesomeIcon icon={faQuestionCircle} width=\"50px\" />\r\n                            </div>}\r\n                    </> : <div className=\"storeShow\">{stores.map((store) => <StoreBox storeObj={store} isHost={false} />)}</div>}\r\n                </>\r\n            }\r\n        </div>\r\n\r\n    </>);\r\n}\r\nexport default Main;","import REACT, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { dbService } from '../fbase';\r\nconst WaitingBox = ({ waitingObj, storeObj }) => {\r\n\r\n    const onEnterClick = () => {\r\n        axios.get(`/sms/${waitingObj.phoneNum}/${storeObj.storeName}`).then(res => console.log(res.data));\r\n        dbService.doc(`ReserveList/${storeObj.id}`).get().then((get) => {\r\n            dbService.doc(`ReserveList/${storeObj.id}`).update({\r\n                waiting: get.data().waiting.slice(1, get.data().waiting.length)\r\n            })\r\n            dbService.doc(`Stores/${storeObj.id}`).update({\r\n                wait: get.data().waiting.length - 1\r\n            })\r\n        })\r\n    }\r\n    return (<>\r\n        <div className=\"box-container waitingBox\" >\r\n            <span>{waitingObj.name}</span>\r\n            <span>인원 : {waitingObj.people}</span>\r\n            <span>연락처 : {waitingObj.phoneNum}</span>\r\n            <span id=\"time\">{waitingObj.createAtTime}</span>\r\n            <span onClick={onEnterClick} className=\"enter-btn\">입장</span>\r\n        </div>\r\n\r\n    </>);\r\n\r\n}\r\nexport default WaitingBox;","import REACT, { useEffect, useState } from 'react';\r\nimport { dbService } from '../fbase';\r\nimport WaitingBox from '../components/WaitingBox';\r\n\r\nconst Waiting = () => {\r\n    const [waitingArr, setWaitingArr] = useState([]);\r\n    const [storeObj, setStoreObj] = useState(() => JSON.parse(window.localStorage.getItem(\"storeObj\")) || 0);\r\n    useEffect(() => {\r\n        dbService.doc(`ReserveList/${storeObj.id}`).onSnapshot((Snapshot) => {\r\n            if(Snapshot.exists){                \r\n            setWaitingArr(Snapshot.data().waiting)\r\n            }\r\n        })\r\n    })\r\n    return (<>\r\n        <div className=\"Container\">\r\n            <span className=\"title\">대기 리스트</span>\r\n            <span id=\"waiting-count\">대기 {waitingArr.length}팀</span>\r\n            {waitingArr.map((waiting)=>\r\n                <WaitingBox waitingObj={waiting} storeObj={storeObj}/>\r\n            )}\r\n            {!waitingArr.length&&<>\r\n                    <span className=\"waiting-ment\">대기자가 없습니다.</span>\r\n                \r\n            </>}\r\n        </div>\r\n\r\n\r\n    </>);\r\n\r\n}\r\nexport default Waiting;","import REACT from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddStore from '../routes/AddStore';\r\nimport EditStore from '../routes/EditStore';\r\nimport GuestStore from '../routes/GuesetStore';\r\nimport HostHome from '../routes/HostHome';\r\nimport HostStore from '../routes/HostStore';\r\nimport Main from '../routes/Main';\r\nimport Waiting from '../routes/Waiting';\r\nconst AppRouter = ({ ishost, hostObj }) => {\r\n    return (<Router>\r\n        <Switch>\r\n            {ishost ?\r\n                <>\r\n                    <Route exact path=\"/\">\r\n                        <HostHome hostObj={hostObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/AddStore\">\r\n                        <AddStore hostObj={hostObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/hostStore\">\r\n                        <HostStore />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/waiting\">\r\n                        <Waiting />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/editStore\">\r\n                        <EditStore />\r\n                    </Route>\r\n\r\n                </>\r\n\r\n                :\r\n                <>\r\n                    <Route exact path=\"/\">\r\n                        <Main />\r\n                    </Route>\r\n                    <Route exact path=\"/guestStore\">\r\n                        <GuestStore />\r\n                    </Route>\r\n                </>\r\n            }\r\n        </Switch>\r\n    </Router>);\r\n}\r\nexport default AppRouter;","import { useEffect, useState } from 'react';\nimport { authService } from '../fbase';\nimport AppRouter from './Router';\n\nfunction App() {\n  const [ishost, setIsHost] = useState(false);\n  const [init, setInit] = useState(false);\n  const [hostObj, setHostObj] = useState({\n    hostEmail: \"\",\n    hostId: \"\",\n  })\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        setIsHost(true);\n        setHostObj({\n          hostEmail: user.email,\n          hostId: user.uid,\n        })\n        window.localStorage.setItem(\"hostObj\", JSON.stringify({\n          hostEmail: user.email,\n          hostId: user.uid,\n        }))\n      }\n      else setIsHost(false);\n\n      setInit(true);\n    })\n\n  }, []);\n\n  return (<>\n\n    <head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0 user-scalable=no\" /></head>\n    {init ? <AppRouter ishost={ishost} hostObj={hostObj} /> : <span id=\"loading\">Loading...</span>}\n    <footer>&copy; DDOCK {new Date().getFullYear()} by keeper</footer>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fbase from \"./fbase.js\";\nimport \"./styles.css\";\n\nReactDOM.render(<>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode></>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}